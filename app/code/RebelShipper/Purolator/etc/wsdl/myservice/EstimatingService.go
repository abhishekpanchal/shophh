package myservice

// Generated by https://github.com/hooklift/gowsdl
// Do not modify
// Copyright (c) 2015, Hooklift. All rights reserved.
import (
	"encoding/xml"
	"net/http"
	"time"

	gowsdl "github.com/hooklift/gowsdl/generator"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type Char int32

const ()

type Duration *Duration

const ()

type Guid string

const ()

type WeightUnit string

const (

	// lb
	WeightUnitLb WeightUnit = "lb"

	// kg
	WeightUnitKg WeightUnit = "kg"
)

type Language string

const (

	// en
	LanguageEn Language = "en"

	// fr
	LanguageFr Language = "fr"
)

type DimensionUnit string

const (

	// in
	DimensionUnitIn DimensionUnit = "in"

	// cm
	DimensionUnitCm DimensionUnit = "cm"
)

type BillDutiesToParty string

const (

	// Sender
	BillDutiesToPartySender BillDutiesToParty = "Sender"

	// Receiver
	BillDutiesToPartyReceiver BillDutiesToParty = "Receiver"

	// Buyer
	BillDutiesToPartyBuyer BillDutiesToParty = "Buyer"
)

type BusinessRelationship string

const (

	// Related
	BusinessRelationshipRelated BusinessRelationship = "Related"

	// NotRelated
	BusinessRelationshipNotRelated BusinessRelationship = "NotRelated"
)

type DutyCurrency string

const (

	// CAD
	DutyCurrencyCAD DutyCurrency = "CAD"

	// USD
	DutyCurrencyUSD DutyCurrency = "USD"
)

type ImportExportType string

const (

	// Permanent
	ImportExportTypePermanent ImportExportType = "Permanent"

	// Temporary
	ImportExportTypeTemporary ImportExportType = "Temporary"

	// Repair
	ImportExportTypeRepair ImportExportType = "Repair"

	// Return
	ImportExportTypeReturn ImportExportType = "Return"
)

type PaymentType string

const (

	// Sender
	PaymentTypeSender PaymentType = "Sender"

	// Receiver
	PaymentTypeReceiver PaymentType = "Receiver"

	// ThirdParty
	PaymentTypeThirdParty PaymentType = "ThirdParty"

	// CreditCard
	PaymentTypeCreditCard PaymentType = "CreditCard"
)

type CreditCardType string

const (

	// Visa
	CreditCardTypeVisa CreditCardType = "Visa"

	// MasterCard
	CreditCardTypeMasterCard CreditCardType = "MasterCard"

	// AmericanExpress
	CreditCardTypeAmericanExpress CreditCardType = "AmericanExpress"
)

type PickupType string

const (

	// DropOff
	PickupTypeDropOff PickupType = "DropOff"

	// PreScheduled
	PickupTypePreScheduled PickupType = "PreScheduled"
)

type GetQuickEstimateRequestContainer struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 GetQuickEstimateRequestContainer"`

	*RequestContainer

	// AccountNumber - string
	BillingAccountNumber string `xml:"BillingAccountNumber,omitempty"`

	// SenderPostalCode - string
	SenderPostalCode string `xml:"SenderPostalCode,omitempty"`

	// ReceiverAddress - ShortAddress
	ReceiverAddress *ShortAddress `xml:"ReceiverAddress,omitempty"`

	// PackageType - PackageType
	PackageType string `xml:"PackageType,omitempty"`

	// TotalWeight - Weight
	TotalWeight *TotalWeight `xml:"TotalWeight,omitempty"`
}

type RequestContainer struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 RequestContainer"`
}

type ShortAddress struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ShortAddress"`

	// City - string
	City string `xml:"City,omitempty"`

	// Province - string
	Province string `xml:"Province,omitempty"`

	// Country - string
	Country string `xml:"Country,omitempty"`

	// PostalCode; - string
	PostalCode string `xml:"PostalCode,omitempty"`
}

type TotalWeight struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 TotalWeight"`

	// Value - decimal
	Value int32 `xml:"Value,omitempty"`

	// WeightUnit - WeightUnit
	WeightUnit *WeightUnit `xml:"WeightUnit,omitempty"`
}

type RequestContext struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 RequestContext"`

	// Version - string
	Version string `xml:"Version,omitempty"`

	// Language - string
	Language *Language `xml:"Language,omitempty"`

	// GroupID - string
	GroupID string `xml:"GroupID,omitempty"`

	// RequestReference - string
	RequestReference string `xml:"RequestReference,omitempty"`

	// UserToken - string
	UserToken string `xml:"UserToken,omitempty"`
}

type GetQuickEstimateResponseContainer struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 GetQuickEstimateResponseContainer"`

	*ResponseContainer

	// ShipmentEstimates - ShipmentEstimate[]
	ShipmentEstimates *ArrayOfShipmentEstimate `xml:"ShipmentEstimates,omitempty"`
}

type ResponseContainer struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ResponseContainer"`

	// ResponseInformation - ResponseInformation
	ResponseInformation *ResponseInformation `xml:"ResponseInformation,omitempty"`
}

type ResponseInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ResponseInformation"`

	// Errors - Error[]
	Errors *ArrayOfError `xml:"Errors,omitempty"`

	// InformationalMessages - InformationalMessage[]
	InformationalMessages *ArrayOfInformationalMessage `xml:"InformationalMessages,omitempty"`
}

type ArrayOfError struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfError"`

	Error []*Error `xml:"Error,omitempty"`
}

type Error struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Error"`

	// Code - string
	Code string `xml:"Code,omitempty"`

	// Description - string
	Description string `xml:"Description,omitempty"`

	// AdditionalInformation - string
	AdditionalInformation string `xml:"AdditionalInformation,omitempty"`
}

type ArrayOfInformationalMessage struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfInformationalMessage"`

	InformationalMessage []*InformationalMessage `xml:"InformationalMessage,omitempty"`
}

type InformationalMessage struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 InformationalMessage"`

	// Code - string
	Code string `xml:"Code,omitempty"`

	// Message - string
	Message string `xml:"Message,omitempty"`
}

type ArrayOfShipmentEstimate struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfShipmentEstimate"`

	ShipmentEstimate []*ShipmentEstimate `xml:"ShipmentEstimate,omitempty"`
}

type ShipmentEstimate struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ShipmentEstimate"`

	// ServiceID - string
	ServiceID string `xml:"ServiceID,omitempty"`

	// ShipmentDate - string
	ShipmentDate string `xml:"ShipmentDate,omitempty"`

	// ExpectedDeliveryDate - string
	ExpectedDeliveryDate string `xml:"ExpectedDeliveryDate,omitempty"`

	// EstimatedTransitDays - int
	EstimatedTransitDays int32 `xml:"EstimatedTransitDays,omitempty"`

	// BasePrice - decimal
	BasePrice float64 `xml:"BasePrice,omitempty"`

	// Surcharges - Surcharge[]
	Surcharges *ArrayOfSurcharge `xml:"Surcharges,omitempty"`

	// Taxes - Tax[]
	Taxes *ArrayOfTax `xml:"Taxes,omitempty"`

	// OptionPrices - OptionPrice[]
	OptionPrices *ArrayOfOptionPrice `xml:"OptionPrices,omitempty"`

	// TotalPrice - decimal
	TotalPrice float64 `xml:"TotalPrice,omitempty"`
}

type ArrayOfSurcharge struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfSurcharge"`

	Surcharge []*Surcharge `xml:"Surcharge,omitempty"`
}

type Surcharge struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Surcharge"`

	// Amount - decimal
	Amount float64 `xml:"Amount,omitempty"`

	// Type - string
	Type string `xml:"Type,omitempty"`

	// Description - string
	Description string `xml:"Description,omitempty"`
}

type ArrayOfTax struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfTax"`

	Tax []*Tax `xml:"Tax,omitempty"`
}

type Tax struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Tax"`

	// Amount - decimal
	Amount float64 `xml:"Amount,omitempty"`

	// Type - string
	Type string `xml:"Type,omitempty"`

	// Description - string
	Description string `xml:"Description,omitempty"`
}

type ArrayOfOptionPrice struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfOptionPrice"`

	OptionPrice []*OptionPrice `xml:"OptionPrice,omitempty"`
}

type OptionPrice struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 OptionPrice"`

	// Amount - decimal
	Amount float64 `xml:"Amount,omitempty"`

	// ID - string
	ID string `xml:"ID,omitempty"`

	// Description - string
	Description string `xml:"Description,omitempty"`
}

type ResponseContext struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ResponseContext"`

	// ResponseReference - string
	ResponseReference string `xml:"ResponseReference,omitempty"`
}

type GetFullEstimateRequestContainer struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 GetFullEstimateRequestContainer"`

	*RequestContainer

	// Shipment - Shipment
	Shipment *Shipment `xml:"Shipment,omitempty"`

	// ShowAlternativeServicesIndicator - boolean
	ShowAlternativeServicesIndicator bool `xml:"ShowAlternativeServicesIndicator,omitempty"`
}

type Shipment struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Shipment"`

	// SenderInformation - SenderInformation
	SenderInformation *SenderInformation `xml:"SenderInformation,omitempty"`

	// ReceiverInformation - ReceiverInformation
	ReceiverInformation *ReceiverInformation `xml:"ReceiverInformation,omitempty"`

	// ShipmentDate - string
	ShipmentDate string `xml:"ShipmentDate,omitempty"`

	// PackageInformation - PackageInformation
	PackageInformation *PackageInformation `xml:"PackageInformation,omitempty"`

	// InternationalInformatio - InternationalInformation
	InternationalInformation *InternationalInformation `xml:"InternationalInformation,omitempty"`

	// ReturnShipmentInformation - ReturnShipmentInformation
	ReturnShipmentInformation *ReturnShipmentInformation `xml:"ReturnShipmentInformation,omitempty"`

	// PaymentInformation - PaymentInformation
	PaymentInformation *PaymentInformation `xml:"PaymentInformation,omitempty"`

	// PickupInformation - PickupInformation
	PickupInformation *PickupInformation `xml:"PickupInformation,omitempty"`

	// NotificationInformation - NotificationInformation
	NotificationInformation *NotificationInformation `xml:"NotificationInformation,omitempty"`

	// TrackingReferenceInformation - TrackingReferenceInformation
	TrackingReferenceInformation *TrackingReferenceInformation `xml:"TrackingReferenceInformation,omitempty"`

	// OtherInformation - OtherInformation
	OtherInformation *OtherInformation `xml:"OtherInformation,omitempty"`
}

type SenderInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 SenderInformation"`

	// Address - Address
	Address *Address `xml:"Address,omitempty"`

	// TaxNumber - string
	TaxNumber string `xml:"TaxNumber,omitempty"`
}

type Address struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Address"`

	// Name - string
	Name string `xml:"Name,omitempty"`

	// Company - string
	Company string `xml:"Company,omitempty"`

	// Department - string
	Department string `xml:"Department,omitempty"`

	// StreetNumber - string
	StreetNumber string `xml:"StreetNumber,omitempty"`

	// StreetSuffix - string
	StreetSuffix string `xml:"StreetSuffix,omitempty"`

	// StreetName - string
	StreetName string `xml:"StreetName,omitempty"`

	// StreetType - string
	StreetType string `xml:"StreetType,omitempty"`

	// StreetDirection - string
	StreetDirection string `xml:"StreetDirection,omitempty"`

	// Suite - string
	Suite string `xml:"Suite,omitempty"`

	// Floor - string
	Floor string `xml:"Floor,omitempty"`

	// StreetAddress2 - string
	StreetAddress2 string `xml:"StreetAddress2,omitempty"`

	// StreetAddress3 - string
	StreetAddress3 string `xml:"StreetAddress3,omitempty"`

	// City - string
	City string `xml:"City,omitempty"`

	// Province - string
	Province string `xml:"Province,omitempty"`

	// Country - string
	Country string `xml:"Country,omitempty"`

	// PostalCode - string
	PostalCode string `xml:"PostalCode,omitempty"`

	// PhoneNumber - PhoneNumber
	PhoneNumber *PhoneNumber `xml:"PhoneNumber,omitempty"`

	// Faxnumber - PhoneNumber
	FaxNumber *PhoneNumber `xml:"FaxNumber,omitempty"`
}

type PhoneNumber struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 PhoneNumber"`

	// CountryCode - string
	CountryCode string `xml:"CountryCode,omitempty"`

	// AreaCode - string
	AreaCode string `xml:"AreaCode,omitempty"`

	// Phone - string
	Phone string `xml:"Phone,omitempty"`

	// Extension - string
	Extension string `xml:"Extension,omitempty"`
}

type ReceiverInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ReceiverInformation"`

	// Address - Address
	Address *Address `xml:"Address,omitempty"`

	// TaxNumber - string
	TaxNumber string `xml:"TaxNumber,omitempty"`
}

type PackageInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 PackageInformation"`

	// ServiceID - string
	ServiceID string `xml:"ServiceID,omitempty"`

	// Description - string
	Description string `xml:"Description,omitempty"`

	// TotalWeight - Weight
	TotalWeight *TotalWeight `xml:"TotalWeight,omitempty"`

	// TotalPieces - int
	TotalPieces int32 `xml:"TotalPieces,omitempty"`

	// PiecesInformation - Piece[]
	PiecesInformation *ArrayOfPiece `xml:"PiecesInformation,omitempty"`

	// DangerousGoodsDeclarationDocumentIndicator - bool
	DangerousGoodsDeclarationDocumentIndicator bool `xml:"DangerousGoodsDeclarationDocumentIndicator,omitempty"`

	// SenderInformation - SenderInformation
	OptionsInformation *OptionsInformation `xml:"OptionsInformation,omitempty"`
}

type ArrayOfPiece struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfPiece"`

	Piece []*Piece `xml:"Piece,omitempty"`
}

type Piece struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Piece"`

	// Weight - Weight
	Weight *Weight `xml:"Weight,omitempty"`

	// Length - Dimension
	Length *Dimension `xml:"Length,omitempty"`

	// Width - Dimension
	Width *Dimension `xml:"Width,omitempty"`

	// Height - Dimension
	Height *Dimension `xml:"Height,omitempty"`

	// Options - OptionIDValuePair[]
	Options *ArrayOfOptionIDValuePair `xml:"Options,omitempty"`
}

type Weight struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Weight"`

	// Value - decimal
	Value float64 `xml:"Value,omitempty"`

	// WeightUnit - WeightUnit
	WeightUnit *WeightUnit `xml:"WeightUnit,omitempty"`
}

type Dimension struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Dimension"`

	// Value - decimal
	Value float64 `xml:"Value,omitempty"`

	// DimensionUnit - DimensionUnit
	DimensionUnit *DimensionUnit `xml:"DimensionUnit,omitempty"`
}

type ArrayOfOptionIDValuePair struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfOptionIDValuePair"`

	OptionIDValuePair []*OptionIDValuePair `xml:"OptionIDValuePair,omitempty"`
}

type OptionIDValuePair struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 OptionIDValuePair"`

	// ID - string
	ID string `xml:"ID,omitempty"`

	// Value - string
	Value string `xml:"Value,omitempty"`
}

type OptionsInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 OptionsInformation"`

	// Options - OptionIDValuePair[]
	Options *ArrayOfOptionIDValuePair `xml:"Options,omitempty"`

	// ExpressChequeAddress - Address
	ExpressChequeAddress *Address `xml:"ExpressChequeAddress,omitempty"`
}

type InternationalInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 InternationalInformation"`

	// DocumentsOnlyIndicator - bool
	DocumentsOnlyIndicator bool `xml:"DocumentsOnlyIndicator,omitempty"`

	// ContentDetails - ContentDetail[]
	ContentDetails *ArrayOfContentDetail `xml:"ContentDetails,omitempty"`

	// BuyerInformation - BuyerInformation
	BuyerInformation *BuyerInformation `xml:"BuyerInformation,omitempty"`

	// PreferredCustomsBroker - string
	PreferredCustomsBroker string `xml:"PreferredCustomsBroker,omitempty"`

	// DutyInformation - DutyInformation
	DutyInformation *DutyInformation `xml:"DutyInformation,omitempty"`

	// ImportExportType - ImportExportType
	ImportExportType *ImportExportType `xml:"ImportExportType,omitempty"`

	// CustomsInvoiceDocumentIndicator - bool
	CustomsInvoiceDocumentIndicator bool `xml:"CustomsInvoiceDocumentIndicator,omitempty"`
}

type ArrayOfContentDetail struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfContentDetail"`

	ContentDetail []*ContentDetail `xml:"ContentDetail,omitempty"`
}

type ContentDetail struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ContentDetail"`

	// Description - string
	Description string `xml:"Description,omitempty"`

	// HarmonizedCode - string
	HarmonizedCode string `xml:"HarmonizedCode,omitempty"`

	// CountryOfManufacture - string
	CountryOfManufacture string `xml:"CountryOfManufacture,omitempty"`

	// ProductCode - string
	ProductCode string `xml:"ProductCode,omitempty"`

	// UnitValue - decimal
	UnitValue float64 `xml:"UnitValue,omitempty"`

	// Quantity - int
	Quantity int32 `xml:"Quantity,omitempty"`

	// NAFTADocumentIndicator - bool
	NAFTADocumentIndicator bool `xml:"NAFTADocumentIndicator,omitempty"`

	// FDADocumentIndicator - bool
	FDADocumentIndicator bool `xml:"FDADocumentIndicator,omitempty"`

	// FCCDocumentIndicator - bool
	FCCDocumentIndicator bool `xml:"FCCDocumentIndicator,omitempty"`

	// SenderIsProducerIndicator - bool
	SenderIsProducerIndicator bool `xml:"SenderIsProducerIndicator,omitempty"`

	// TextileIndicator - bool
	TextileIndicator bool `xml:"TextileIndicator,omitempty"`

	// ProductCode - string
	TextileManufacturer string `xml:"TextileManufacturer,omitempty"`
}

type BuyerInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 BuyerInformation"`

	// Address - Address
	Address *Address `xml:"Address,omitempty"`

	// TaxNumber - string
	TaxNumber string `xml:"TaxNumber,omitempty"`
}

type DutyInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 DutyInformation"`

	// BillDutiesToParty - BillDutiesToParty
	BillDutiesToParty *BillDutiesToParty `xml:"BillDutiesToParty,omitempty"`

	// BusinessRelationship - BusinessRelationship
	BusinessRelationship *BusinessRelationship `xml:"BusinessRelationship,omitempty"`

	// Currency - DutyCurrency
	Currency *DutyCurrency `xml:"Currency,omitempty"`
}

type ReturnShipmentInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ReturnShipmentInformation"`

	// NumberOfReturnShipments - int
	NumberOfReturnShipments int32 `xml:"NumberOfReturnShipments,omitempty"`

	// Shipment - Shipment
	ReturnShipment *ReturnShipment `xml:"ReturnShipment,omitempty"`
}

type ReturnShipment struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ReturnShipment"`

	// SenderInformation - SenderInformation
	SenderInformation *SenderInformation `xml:"SenderInformation,omitempty"`

	// ReceiverInformation - ReceiverInformation
	ReceiverInformation *ReceiverInformation `xml:"ReceiverInformation,omitempty"`

	// PackageInformation - PackageInformation
	PackageInformation *PackageInformation `xml:"PackageInformation,omitempty"`

	// PaymentInformation - PaymentInformation
	PaymentInformation *PaymentInformation `xml:"PaymentInformation,omitempty"`

	// PickupInformation - PickupInformation
	PickupInformation *PickupInformation `xml:"PickupInformation,omitempty"`

	// NotificationInformation - NotificationInformation
	NotificationInformation *NotificationInformation `xml:"NotificationInformation,omitempty"`

	// TrackingReferenceInformation - TrackingReferenceInformation
	TrackingReferenceInformation *TrackingReferenceInformation `xml:"TrackingReferenceInformation,omitempty"`

	// OtherInformation - OtherInformation
	OtherInformation *OtherInformation `xml:"OtherInformation,omitempty"`
}

type PaymentInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 PaymentInformation"`

	// PaymentType - PaymentType
	PaymentType *PaymentType `xml:"PaymentType,omitempty"`

	// RegisteredAccountNumber - string
	RegisteredAccountNumber string `xml:"RegisteredAccountNumber,omitempty"`

	// BillingAccountNumber - string
	BillingAccountNumber string `xml:"BillingAccountNumber,omitempty"`

	// CreditCardInformation - CreditCardInformation
	CreditCardInformation *CreditCardInformation `xml:"CreditCardInformation,omitempty"`
}

type CreditCardInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 CreditCardInformation"`

	// Type - CreditCardType
	Type *CreditCardType `xml:"Type,omitempty"`

	// Number - string
	Number string `xml:"Number,omitempty"`

	// Name - string
	Name string `xml:"Name,omitempty"`

	// ExpiryMonth - int
	ExpiryMonth int32 `xml:"ExpiryMonth,omitempty"`

	// ExpiryYear - int
	ExpiryYear int32 `xml:"ExpiryYear,omitempty"`

	// CVV - string
	CVV string `xml:"CVV,omitempty"`
}

type PickupInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 PickupInformation"`

	// Type - PickupType
	PickupType *PickupType `xml:"PickupType,omitempty"`
}

type NotificationInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 NotificationInformation"`

	// ConfirmationEmailAddress - string
	ConfirmationEmailAddress string `xml:"ConfirmationEmailAddress,omitempty"`

	// AdvancedShippingNotificationEmailAddress1 - string
	AdvancedShippingNotificationEmailAddress1 string `xml:"AdvancedShippingNotificationEmailAddress1,omitempty"`

	// AdvancedShippingNotificationEmailAddress2 - string
	AdvancedShippingNotificationEmailAddress2 string `xml:"AdvancedShippingNotificationEmailAddress2,omitempty"`

	// AdvancedShippingNotificationMessage - string
	AdvancedShippingNotificationMessage string `xml:"AdvancedShippingNotificationMessage,omitempty"`
}

type TrackingReferenceInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 TrackingReferenceInformation"`

	// Reference1 - string
	Reference1 string `xml:"Reference1,omitempty"`

	// Reference2 - string
	Reference2 string `xml:"Reference2,omitempty"`

	// Reference3 - string
	Reference3 string `xml:"Reference3,omitempty"`

	// Reference4 - string
	Reference4 string `xml:"Reference4,omitempty"`
}

type OtherInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 OtherInformation"`

	// CostCentre - string
	CostCentre string `xml:"CostCentre,omitempty"`

	// SpecialInstructions - string
	SpecialInstructions string `xml:"SpecialInstructions,omitempty"`
}

type GetFullEstimateResponseContainer struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 GetFullEstimateResponseContainer"`

	*ResponseContainer

	// ShipmentEstimates - ShipmentEstimate[]
	ShipmentEstimates *ArrayOfShipmentEstimate `xml:"ShipmentEstimates,omitempty"`

	// ReturnShipmentEstimates - ShipmentEstimate[]
	ReturnShipmentEstimates *ArrayOfShipmentEstimate `xml:"ReturnShipmentEstimates,omitempty"`
}

type ValidationFault struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ValidationFault"`

	Details *ArrayOfValidationDetail `xml:"Details,omitempty"`
}

type ArrayOfValidationDetail struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfValidationDetail"`

	ValidationDetail []*ValidationDetail `xml:"ValidationDetail,omitempty"`
}

type ValidationDetail struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ValidationDetail"`

	// Get or set a name describing the location of the validation result.
	Key string `xml:"Key,omitempty"`

	// Get or set a message describing the validation failure.
	Message string `xml:"Message,omitempty"`

	// Get or set a value characterizing the fault.
	Tag string `xml:"Tag,omitempty"`
}

type EstimatingServiceContract struct {
	client *gowsdl.SoapClient
}

func NewEstimatingServiceContract(url string, tls bool) *EstimatingServiceContract {
	if url == "" {
		url = ""
	}
	client := gowsdl.NewSoapClient(url, tls)

	return &EstimatingServiceContract{
		client: client,
	}
}

// Error can be either of the following types:
//
//   - ValidationFaultFault
/*
	GetQuickEstimate
	@param request GetQuickEstimateRequest
	@return GetQuickEstimateResponse
*/
func (service *EstimatingServiceContract) GetQuickEstimate(request *GetQuickEstimateRequestContainer, header *gowsdl.SoapHeader, configureRequest func(*http.Request)) (*GetQuickEstimateResponseContainer, error) {
	response := &GetQuickEstimateResponseContainer{}
	err := service.client.Call("http://purolator.com/pws/service/v1/GetQuickEstimate", request, response, header, configureRequest)
	if err != nil {
		return nil, err
	}

	return response, nil
}

// Error can be either of the following types:
//
//   - ValidationFaultFault
/*
	GetFullEstimate
	@param request GetFullEstimateRequest
	@return GetFullEstimateResponse
*/
func (service *EstimatingServiceContract) GetFullEstimate(request *GetFullEstimateRequestContainer, header *gowsdl.SoapHeader, configureRequest func(*http.Request)) (*GetFullEstimateResponseContainer, error) {
	response := &GetFullEstimateResponseContainer{}
	err := service.client.Call("http://purolator.com/pws/service/v1/GetFullEstimate", request, response, header, configureRequest)
	if err != nil {
		return nil, err
	}

	return response, nil
}
