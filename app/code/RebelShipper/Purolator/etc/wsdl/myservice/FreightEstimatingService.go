package myservice

// Generated by https://github.com/hooklift/gowsdl
// Do not modify
// Copyright (c) 2015, Hooklift. All rights reserved.
import (
	"encoding/xml"
	"net/http"
	"time"

	gowsdl "github.com/hooklift/gowsdl/generator"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type Char int32

const ()

type Duration *Duration

const ()

type Guid string

const ()

type PaymentType string

const (
	PaymentTypeSender PaymentType = "Sender"

	PaymentTypeReceiver PaymentType = "Receiver"

	PaymentTypeThirdParty PaymentType = "ThirdParty"

	PaymentTypeCreditCard PaymentType = "CreditCard"
)

type CreditCardType string

const (
	CreditCardTypeVisa CreditCardType = "Visa"

	CreditCardTypeMasterCard CreditCardType = "MasterCard"

	CreditCardTypeAmericanExpress CreditCardType = "AmericanExpress"
)

type WeightUnit string

const (
	WeightUnitLb WeightUnit = "lb"

	WeightUnitKg WeightUnit = "kg"
)

type DimensionUnit string

const (
	DimensionUnitIn DimensionUnit = "in"

	DimensionUnitCm DimensionUnit = "cm"
)

type Language string

const (
	LanguageEn Language = "en"

	LanguageFr Language = "fr"
)

type GetEstimateRequestContainer struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 GetEstimateRequestContainer"`

	*RequestContainer

	Estimate *Shipment `xml:"Estimate,omitempty"`
}

type RequestContainer struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 RequestContainer"`
}

type Shipment struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Shipment"`

	SenderInformation *SenderInformation `xml:"SenderInformation,omitempty"`

	ReceiverInformation *ReceiverInformation `xml:"ReceiverInformation,omitempty"`

	PaymentInformation *PaymentInformation `xml:"PaymentInformation,omitempty"`

	ShipmentDetails *EstimateInformation `xml:"ShipmentDetails,omitempty"`
}

type SenderInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 SenderInformation"`

	Address *Address `xml:"Address,omitempty"`

	EmailAddress string `xml:"EmailAddress,omitempty"`
}

type Address struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Address"`

	Name string `xml:"Name,omitempty"`

	Company string `xml:"Company,omitempty"`

	Department string `xml:"Department,omitempty"`

	StreetNumber string `xml:"StreetNumber,omitempty"`

	StreetSuffix string `xml:"StreetSuffix,omitempty"`

	StreetName string `xml:"StreetName,omitempty"`

	StreetType string `xml:"StreetType,omitempty"`

	StreetDirection string `xml:"StreetDirection,omitempty"`

	Suite string `xml:"Suite,omitempty"`

	Floor string `xml:"Floor,omitempty"`

	StreetAddress2 string `xml:"StreetAddress2,omitempty"`

	StreetAddress3 string `xml:"StreetAddress3,omitempty"`

	City string `xml:"City,omitempty"`

	Province string `xml:"Province,omitempty"`

	Country string `xml:"Country,omitempty"`

	PostalCode string `xml:"PostalCode,omitempty"`

	PhoneNumber *PhoneNumber `xml:"PhoneNumber,omitempty"`

	FaxNumber *PhoneNumber `xml:"FaxNumber,omitempty"`
}

type PhoneNumber struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 PhoneNumber"`

	CountryCode string `xml:"CountryCode,omitempty"`

	AreaCode string `xml:"AreaCode,omitempty"`

	Phone string `xml:"Phone,omitempty"`

	Extension string `xml:"Extension,omitempty"`
}

type ReceiverInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ReceiverInformation"`

	Address *Address `xml:"Address,omitempty"`

	EmailAddress string `xml:"EmailAddress,omitempty"`
}

type PaymentInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 PaymentInformation"`

	PaymentType *PaymentType `xml:"PaymentType,omitempty"`

	RegisteredAccountNumber string `xml:"RegisteredAccountNumber,omitempty"`

	BillingAccountNumber string `xml:"BillingAccountNumber,omitempty"`

	CreditCardInformation *CreditCardInformation `xml:"CreditCardInformation,omitempty"`
}

type CreditCardInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 CreditCardInformation"`

	Type *CreditCardType `xml:"Type,omitempty"`

	Number string `xml:"Number,omitempty"`

	Name string `xml:"Name,omitempty"`

	ExpiryMonth int32 `xml:"ExpiryMonth,omitempty"`

	ExpiryYear int32 `xml:"ExpiryYear,omitempty"`

	CVV string `xml:"CVV,omitempty"`
}

type EstimateInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 EstimateInformation"`

	ServiceTypeCode string `xml:"ServiceTypeCode,omitempty"`

	ShipmentDate string `xml:"ShipmentDate,omitempty"`

	DeclaredValue float64 `xml:"DeclaredValue,omitempty"`

	CODAmount float64 `xml:"CODAmount,omitempty"`

	SpecialInstructions string `xml:"SpecialInstructions,omitempty"`

	LineItemDetails *ArrayOfLineItem `xml:"LineItemDetails,omitempty"`

	AccesorialParameters *ArrayOfBoolValuePair `xml:"AccesorialParameters,omitempty"`
}

type ArrayOfLineItem struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfLineItem"`

	LineItem []*LineItem `xml:"LineItem,omitempty"`
}

type LineItem struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 LineItem"`

	LineNumber int32 `xml:"LineNumber,omitempty"`

	Pieces int32 `xml:"Pieces,omitempty"`

	HandlingUnit int32 `xml:"HandlingUnit,omitempty"`

	HandlingUnitType string `xml:"HandlingUnitType,omitempty"`

	Description string `xml:"Description,omitempty"`

	Weight *Weight `xml:"Weight,omitempty"`

	FreightClass string `xml:"FreightClass,omitempty"`

	Length *Dimension `xml:"Length,omitempty"`

	Width *Dimension `xml:"Width,omitempty"`

	Height *Dimension `xml:"Height,omitempty"`

	BasePrice float64 `xml:"BasePrice,omitempty"`

	Charge float64 `xml:"Charge,omitempty"`
}

type Weight struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Weight"`

	Value float64 `xml:"Value,omitempty"`

	WeightUnit *WeightUnit `xml:"WeightUnit,omitempty"`
}

type Dimension struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Dimension"`

	Value float64 `xml:"Value,omitempty"`

	DimensionUnit *DimensionUnit `xml:"DimensionUnit,omitempty"`
}

type ArrayOfBoolValuePair struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfBoolValuePair"`

	BoolValuePair []*BoolValuePair `xml:"BoolValuePair,omitempty"`
}

type BoolValuePair struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 BoolValuePair"`

	Keyword string `xml:"Keyword,omitempty"`

	Value bool `xml:"Value,omitempty"`
}

type RequestContext struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 RequestContext"`

	Version string `xml:"Version,omitempty"`

	Language *Language `xml:"Language,omitempty"`

	GroupID string `xml:"GroupID,omitempty"`

	RequestReference string `xml:"RequestReference,omitempty"`
}

type GetEstimateResponseContainer struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 GetEstimateResponseContainer"`

	*ResponseContainer

	TariffCode string `xml:"TariffCode,omitempty"`

	DiscountPoint float64 `xml:"DiscountPoint,omitempty"`

	TransitDays int32 `xml:"TransitDays,omitempty"`

	EstimatedDeliveryDate string `xml:"EstimatedDeliveryDate,omitempty"`

	TotalPrice float64 `xml:"TotalPrice,omitempty"`

	LineItemDetails *ArrayOfLineItem `xml:"LineItemDetails,omitempty"`

	AccessorialDetails *ArrayOfAccessorialItem `xml:"AccessorialDetails,omitempty"`

	ShipmentTaxes *ArrayOfTax `xml:"ShipmentTaxes,omitempty"`
}

type ResponseContainer struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ResponseContainer"`

	ResponseInformation *ResponseInformation `xml:"ResponseInformation,omitempty"`
}

type ResponseInformation struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ResponseInformation"`

	Errors *ArrayOfError `xml:"Errors,omitempty"`

	InformationalMessages *ArrayOfInformationalMessage `xml:"InformationalMessages,omitempty"`
}

type ArrayOfError struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfError"`

	Error []*Error `xml:"Error,omitempty"`
}

type Error struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Error"`

	Code string `xml:"Code,omitempty"`

	Description string `xml:"Description,omitempty"`

	AdditionalInformation string `xml:"AdditionalInformation,omitempty"`
}

type ArrayOfInformationalMessage struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfInformationalMessage"`

	InformationalMessage []*InformationalMessage `xml:"InformationalMessage,omitempty"`
}

type InformationalMessage struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 InformationalMessage"`

	Code string `xml:"Code,omitempty"`

	Message string `xml:"Message,omitempty"`
}

type ArrayOfAccessorialItem struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfAccessorialItem"`

	AccessorialItem []*AccessorialItem `xml:"AccessorialItem,omitempty"`
}

type AccessorialItem struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 AccessorialItem"`

	Code string `xml:"Code,omitempty"`

	Description string `xml:"Description,omitempty"`

	Charge float64 `xml:"Charge,omitempty"`
}

type ArrayOfTax struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfTax"`

	Tax []*Tax `xml:"Tax,omitempty"`
}

type Tax struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 Tax"`

	Amount float64 `xml:"Amount,omitempty"`

	Type string `xml:"Type,omitempty"`

	Description string `xml:"Description,omitempty"`
}

type ResponseContext struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ResponseContext"`

	ResponseReference string `xml:"ResponseReference,omitempty"`
}

type ValidationFault struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ValidationFault"`

	Details *ArrayOfValidationDetail `xml:"Details,omitempty"`
}

type ArrayOfValidationDetail struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ArrayOfValidationDetail"`

	ValidationDetail []*ValidationDetail `xml:"ValidationDetail,omitempty"`
}

type ValidationDetail struct {
	XMLName xml.Name `xml:"http://purolator.com/pws/service/v1 ValidationDetail"`

	Key string `xml:"Key,omitempty"`

	Message string `xml:"Message,omitempty"`

	Tag string `xml:"Tag,omitempty"`
}

type FreightEstimatingServiceContract struct {
	client *gowsdl.SoapClient
}

func NewFreightEstimatingServiceContract(url string, tls bool) *FreightEstimatingServiceContract {
	if url == "" {
		url = ""
	}
	client := gowsdl.NewSoapClient(url, tls)

	return &FreightEstimatingServiceContract{
		client: client,
	}
}

// Error can be either of the following types:
//
//   - ValidationFaultFault

func (service *FreightEstimatingServiceContract) GetEstimate(request *GetEstimateRequestContainer, header *gowsdl.SoapHeader, configureRequest func(*http.Request)) (*GetEstimateResponseContainer, error) {
	response := &GetEstimateResponseContainer{}
	err := service.client.Call("http://purolator.com/pws/service/v1/Freight/GetEstimate", request, response, header, configureRequest)
	if err != nil {
		return nil, err
	}

	return response, nil
}
